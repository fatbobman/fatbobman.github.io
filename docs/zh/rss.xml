<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet href="/rss/styles.xsl" type="text/xsl"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>肘子的 Swift 记事本 ｜ Fatbobman&apos;s Blog</title><description>中文首页｜肘子的 Swift 记事本｜Fatbobman&apos;s Blog，分享与 Swift、SwiftUI、Core Data、Swift Data 有关的内容，也会涉及开发工具、AI 等其他内容。全部文章均为原创，转载需联系本人</description><link>https://fatbobman.com/</link><language>zh</language><follow_challenge><feedId>55086689794490368</feedId><userId>60878761419746304</userId></follow_challenge><item><title>Core Data 迁移事故复盘：那些被忽视的隐藏陷阱</title><link>https://fatbobman.com/zh/posts/core-data-migration-incident-analysis/</link><guid isPermaLink="true">https://fatbobman.com/zh/posts/core-data-migration-incident-analysis/</guid><description>相比一些开源框架，Core Data 和 SwiftData 虽然有苹果的官方背书，但它们的“黑盒”特性在出现异常时常令开发者束手无策，难以及时定位问题并找到有效解决方案。本文记录了一次因 Core Data 数据模型迁移导致的应用启动超时事件，分享解决方案，并深入剖析背后的成因。</description><pubDate>Wed, 23 Jul 2025 14:00:00 GMT</pubDate><content:encoded>&lt;p&gt;相比一些开源框架，Core Data 和 SwiftData 虽然有苹果的官方背书，但它们的“黑盒”特性在出现异常时常令开发者束手无策，难以及时定位问题并找到有效解决方案。本文记录了一次因 Core Data 数据模型迁移导致的应用启动超时事件，分享解决方案，并深入剖析背后的成因。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/posts/core-data-migration-incident-analysis/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>core data</category><author>Fatbobman</author></item><item><title>F1：电影很好看，赛事很挣钱 - 肘子的 Swift 周报 #94</title><link>https://fatbobman.com/zh/weekly/issue-094/</link><guid isPermaLink="true">https://fatbobman.com/zh/weekly/issue-094/</guid><description>上周我去影院看了苹果出品的电影《F1》，体验真的超乎预期。虽然剧情略显简单，但影片营造出的赛车沉浸感和观赛体验已经远超票价。当布拉德·皮特驾驶着 APXGP 赛车在银石赛道上疾驰时，那引擎的咆哮通过 IMAX 音响系统传来的震撼感，让我仿佛回到了 20 多年前，在电视机前为舒马赫和阿隆索激烈对决而热血沸腾的日子。</description><pubDate>Mon, 21 Jul 2025 14:00:00 GMT</pubDate><content:encoded>&lt;p&gt;上周我去影院看了苹果出品的电影《F1》，体验真的超乎预期。虽然剧情略显简单，但影片营造出的赛车沉浸感和观赛体验已经远超票价。当布拉德·皮特驾驶着 APXGP 赛车在银石赛道上疾驰时，那引擎的咆哮通过 IMAX 音响系统传来的震撼感，让我仿佛回到了 20 多年前，在电视机前为舒马赫和阿隆索激烈对决而热血沸腾的日子。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/weekly/issue-094/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>weekly</category><category>swiftui</category><author>Fatbobman</author></item><item><title>Icon Composer 见招拆招</title><link>https://fatbobman.com/zh/posts/icon-composer-tackling-challenges/</link><guid isPermaLink="true">https://fatbobman.com/zh/posts/icon-composer-tackling-challenges/</guid><description>新的 Liquid Glass 风格发布之后，苹果随即提供了用于制作符合 Liquid Glass 标准图标的 Icon Composer。从苹果的介绍来看，Icon Composer 使用非常简单明了，基本上分层把图片放进去即可，但实际使用上还是有一些细节需要小心。Megabits 以他的应用图标为例，简要的介绍一下使用过程中遇到的问题。</description><pubDate>Wed, 16 Jul 2025 14:30:00 GMT</pubDate><content:encoded>&lt;p&gt;新的 Liquid Glass 风格发布之后，苹果随即提供了用于制作符合 Liquid Glass 标准图标的 Icon Composer。从苹果的介绍来看，Icon Composer 使用非常简单明了，基本上分层把图片放进去即可，但实际使用上还是有一些细节需要小心。Megabits 以他的应用图标为例，简要的介绍一下使用过程中遇到的问题。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/posts/icon-composer-tackling-challenges/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>dev tools</category><author>Fatbobman</author></item><item><title>变暗的 Liquid Glass 和消失的 Apple Intelligence - 肘子的 Swift 周报 #93</title><link>https://fatbobman.com/zh/weekly/issue-093/</link><guid isPermaLink="true">https://fatbobman.com/zh/weekly/issue-093/</guid><description>安装 iOS 26 beta 3 后，用户会很快发现 Liquid Glass 的效果不再像前两个测试版那样通透。这种在短时间内对 UI 的显著调整再次证明了开发者测试版的价值——让耐受力更高的专业用户率先体验并反馈，对于服务数十亿用户的苹果来说，是至关重要且不可或缺的环节。</description><pubDate>Mon, 14 Jul 2025 14:00:00 GMT</pubDate><content:encoded>&lt;p&gt;安装 iOS 26 beta 3 后，用户会很快发现 Liquid Glass 的效果不再像前两个测试版那样通透。这种在短时间内对 UI 的显著调整再次证明了开发者测试版的价值——让耐受力更高的专业用户率先体验并反馈，对于服务数十亿用户的苹果来说，是至关重要且不可或缺的环节。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/weekly/issue-093/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>weekly</category><category>swiftui</category><author>Fatbobman</author></item><item><title>在 SwiftUI 中，如何判断 Text 是否被截断？</title><link>https://fatbobman.com/zh/posts/how-to-detect-text-truncation-in-swiftui/</link><guid isPermaLink="true">https://fatbobman.com/zh/posts/how-to-detect-text-truncation-in-swiftui/</guid><description>Text 在 SwiftUI 中大量被使用，与 UIKit/AppKit 中对应的组件相比，Text 无需配置，开箱即用，但这也意味着开发者丧失了更多对其的控制能力。在本文中，我们将通过一个实际案例来展示，如何用 SwiftUI 的方式来完成一些看似&quot;不可能&quot;的任务：在一堆给定的视图中，找出第一个文本未被截断的，并以此作为需求尺寸。</description><pubDate>Wed, 09 Jul 2025 00:12:00 GMT</pubDate><content:encoded>&lt;p&gt;Text 在 SwiftUI 中大量被使用，与 UIKit/AppKit 中对应的组件相比，Text 无需配置，开箱即用，但这也意味着开发者丧失了更多对其的控制能力。在本文中，我们将通过一个实际案例来展示，如何用 SwiftUI 的方式来完成一些看似&quot;不可能&quot;的任务：在一堆给定的视图中，找出第一个文本未被截断的，并以此作为需求尺寸。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/posts/how-to-detect-text-truncation-in-swiftui/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>swiftui</category><author>Fatbobman</author></item><item><title>高温与奇怪的天象 - 肘子的 Swift 周报 #92</title><link>https://fatbobman.com/zh/weekly/issue-092/</link><guid isPermaLink="true">https://fatbobman.com/zh/weekly/issue-092/</guid><description>从 6 月中开始，我所在的城市也迎来了罕见的高温天气。尽管相较于动辄 35-40 多摄氏度的其他地区，30-31 摄氏度在数字上看起来并不夸张，但对于习惯了 20 几度的我来说，这种温度已经很难熬了。</description><pubDate>Mon, 07 Jul 2025 14:00:00 GMT</pubDate><content:encoded>&lt;p&gt;从 6 月中开始，我所在的城市也迎来了罕见的高温天气。尽管相较于动辄 35-40 多摄氏度的其他地区，30-31 摄氏度在数字上看起来并不夸张，但对于习惯了 20 几度的我来说，这种温度已经很难熬了。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/weekly/issue-092/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>weekly</category><category>swiftui</category><author>Fatbobman</author></item><item><title>与 AI 共舞：我的 Claude Code 一月谈</title><link>https://fatbobman.com/zh/posts/dancing-with-ai-my-month-with-claude-code/</link><guid isPermaLink="true">https://fatbobman.com/zh/posts/dancing-with-ai-my-month-with-claude-code/</guid><description>转眼间，我使用 Claude Code 已经整整一个月了。这段时间里，它迅速成为了开发者们的新宠，关于 Claude Code 的讨论充斥着我的社交媒体时间线。恰好有网友在 Discord 上让我聊聊 Claude Code，借此机会，我想梳理一下这段时间的使用感受，以及过去两年中 AI 为我的开发工作带来的便利与思考。</description><pubDate>Wed, 02 Jul 2025 14:12:00 GMT</pubDate><content:encoded>&lt;p&gt;转眼间，我使用 Claude Code 已经整整一个月了。这段时间里，它迅速成为了开发者们的新宠，关于 Claude Code 的讨论充斥着我的社交媒体时间线。恰好有网友在 Discord 上让我聊聊 Claude Code，借此机会，我想梳理一下这段时间的使用感受，以及过去两年中 AI 为我的开发工作带来的便利与思考。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/posts/dancing-with-ai-my-month-with-claude-code/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>ai</category><category>dev tools</category><author>Fatbobman</author></item><item><title>Swift 的多平台策略，需要我们大家一起来建设 - 肘子的 Swift 周报 #91</title><link>https://fatbobman.com/zh/weekly/issue-091/</link><guid isPermaLink="true">https://fatbobman.com/zh/weekly/issue-091/</guid><description>继 2025 年 2 月 Swift 社区论坛发布关于启动 Android Community Workgroup 的消息数月后，Swift.org 于上周正式宣布成立官方 Android 工作组。这标志着由官方主导的 Swift 安卓平台支持正式启动，未来 Swift 开发者有望获得更完善的安卓适配工具链与开发体验。</description><pubDate>Mon, 30 Jun 2025 14:00:00 GMT</pubDate><content:encoded>&lt;p&gt;继 2025 年 2 月 Swift 社区论坛发布关于启动 Android Community Workgroup 的消息数月后，Swift.org 于上周正式宣布成立官方 Android 工作组。这标志着由官方主导的 Swift 安卓平台支持正式启动，未来 Swift 开发者有望获得更完善的安卓适配工具链与开发体验。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/weekly/issue-091/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>weekly</category><category>swiftui</category><author>Fatbobman</author></item><item><title>NotificationCenter.Message：Swift 6.2 并发安全通知的全新体验</title><link>https://fatbobman.com/zh/posts/notificationcentermessage-a-new-concurrency-safe-notification-experience-in-swift-62/</link><guid isPermaLink="true">https://fatbobman.com/zh/posts/notificationcentermessage-a-new-concurrency-safe-notification-experience-in-swift-62/</guid><description>NotificationCenter 作为 iOS 开发中的经典组件，为开发者提供了灵活的广播——订阅机制。然而，随着 Swift 并发模型的不断演进，传统基于字符串标识和 userInfo 字典的通知方式暴露出了诸多问题。为了彻底解决这些痛点，Swift 6.2 在 Foundation 中引入了全新的并发安全通知协议。它充分利用 Swift 的类型系统和并发隔离特性，让消息的发布与订阅在编译期就能得到验证，从根本上杜绝了“线程冲突”和“数据类型错误”等常见问题。</description><pubDate>Wed, 25 Jun 2025 14:00:00 GMT</pubDate><content:encoded>&lt;p&gt;NotificationCenter 作为 iOS 开发中的经典组件，为开发者提供了灵活的广播——订阅机制。然而，随着 Swift 并发模型的不断演进，传统基于字符串标识和 userInfo 字典的通知方式暴露出了诸多问题。为了彻底解决这些痛点，Swift 6.2 在 Foundation 中引入了全新的并发安全通知协议。它充分利用 Swift 的类型系统和并发隔离特性，让消息的发布与订阅在编译期就能得到验证，从根本上杜绝了“线程冲突”和“数据类型错误”等常见问题。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/posts/notificationcentermessage-a-new-concurrency-safe-notification-experience-in-swift-62/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><author>Fatbobman</author></item><item><title>失去时才会觉得可贵 - 肘子的 Swift 周报 #90</title><link>https://fatbobman.com/zh/weekly/issue-090/</link><guid isPermaLink="true">https://fatbobman.com/zh/weekly/issue-090/</guid><description>在 WWDC25 的 Bring your SceneKit project to RealityKit Session 中，Apple 正式宣布 SceneKit 将“只修复关键 bug，不再增加新特性”，官方文档也将其标注为弃用状态，建议开发者迁移至 RealityKit。尽管这一天的到来早在许多开发者的预料之中，但当官方正式宣布时，仍免不了让人唏嘘感慨。</description><pubDate>Mon, 23 Jun 2025 14:00:00 GMT</pubDate><content:encoded>&lt;p&gt;在 WWDC25 的 Bring your SceneKit project to RealityKit Session 中，Apple 正式宣布 SceneKit 将“只修复关键 bug，不再增加新特性”，官方文档也将其标注为弃用状态，建议开发者迁移至 RealityKit。尽管这一天的到来早在许多开发者的预料之中，但当官方正式宣布时，仍免不了让人唏嘘感慨。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/weekly/issue-090/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>weekly</category><category>swiftui</category><author>Fatbobman</author></item><item><title>探索 SwiftUI ZStack 中的 layoutPriority 奥秘</title><link>https://fatbobman.com/zh/posts/exploring-the-secrets-of-layoutpriority-in-zstack/</link><guid isPermaLink="true">https://fatbobman.com/zh/posts/exploring-the-secrets-of-layoutpriority-in-zstack/</guid><description>在 SwiftUI 的布局体系中，layoutPriority() 这一修饰器看似并不起眼，却在关键时刻能左右视图的尺寸分配。大多数开发者都了解它在 VStack 和 HStack 中为子视图争取更多空间的“魔法”能力——优先级越高，越能从拥挤的布局中脱颖而出。但你是否注意过，layoutPriority 在 ZStack 中也能大显身手？但它的运作机制与 VStack/HStack 完全不同。本篇文章将带你深入剖析这一鲜为人知的特性，演示如何在 ZStack 中应用布局优先级。</description><pubDate>Wed, 18 Jun 2025 00:12:00 GMT</pubDate><content:encoded>&lt;p&gt;在 SwiftUI 的布局体系中，layoutPriority() 这一修饰器看似并不起眼，却在关键时刻能左右视图的尺寸分配。大多数开发者都了解它在 VStack 和 HStack 中为子视图争取更多空间的“魔法”能力——优先级越高，越能从拥挤的布局中脱颖而出。但你是否注意过，layoutPriority 在 ZStack 中也能大显身手？但它的运作机制与 VStack/HStack 完全不同。本篇文章将带你深入剖析这一鲜为人知的特性，演示如何在 ZStack 中应用布局优先级。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/posts/exploring-the-secrets-of-layoutpriority-in-zstack/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>swiftui</category><author>Fatbobman</author></item><item><title>WWDC 2025 初印象：意料之中，预想之外</title><link>https://fatbobman.com/zh/posts/wwdc-2025-first-impressions/</link><guid isPermaLink="true">https://fatbobman.com/zh/posts/wwdc-2025-first-impressions/</guid><description>WWDC 2025 如期而至。苹果一次性发布了所有的 Session 视频，让开发者得以在第一时间了解自己感兴趣的新特性和新 API。经过两天的快速浏览，我对本届 WWDC 2025 的初步印象为：意料之中，预想之外。</description><pubDate>Wed, 11 Jun 2025 00:12:00 GMT</pubDate><content:encoded>&lt;p&gt;WWDC 2025 如期而至。苹果一次性发布了所有的 Session 视频，让开发者得以在第一时间了解自己感兴趣的新特性和新 API。经过两天的快速浏览，我对本届 WWDC 2025 的初步印象为：意料之中，预想之外。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/posts/wwdc-2025-first-impressions/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>apple event</category><author>Fatbobman</author></item><item><title>【小贴士】使用 Swift-Syntax 的预构建版本，加快编译速度</title><link>https://fatbobman.com/zh/snippet/speed-up-compilation-with-prebuilt-swift-syntax/</link><guid isPermaLink="true">https://fatbobman.com/zh/snippet/speed-up-compilation-with-prebuilt-swift-syntax/</guid><description>在 Swift 6.1.1+ 中启用预构建 Swift-Syntax，可显著加快宏项目的编译速度，提升开发效率，仅需简单配置 Xcode 或命令行参数</description><pubDate>Fri, 06 Jun 2025 00:20:00 GMT</pubDate><content:encoded>&lt;p&gt;在 Swift 6.1.1+ 中启用预构建 Swift-Syntax，可显著加快宏项目的编译速度，提升开发效率，仅需简单配置 Xcode 或命令行参数&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;/zh/snippet/speed-up-compilation-with-prebuilt-swift-syntax/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><author>Fatbobman</author></item><item><title>Notepad.exe：轻巧的 Swift 代码编辑器</title><link>https://fatbobman.com/zh/posts/notepad-exe-a-lightweight-swift-code-editor/</link><guid isPermaLink="true">https://fatbobman.com/zh/posts/notepad-exe-a-lightweight-swift-code-editor/</guid><description>如今，Xcode Playground 似乎已经偏离了最初的设计初衷，而 VSCode 的配置对初学者来说又显得颇为复杂。在这样的背景下，如何轻松地搭建一个适合学习和测试 Swift 语言的开发环境？也许本文介绍的 Notepad.exe 能为你提供满意的答案。</description><pubDate>Wed, 04 Jun 2025 14:30:00 GMT</pubDate><content:encoded>&lt;p&gt;如今，Xcode Playground 似乎已经偏离了最初的设计初衷，而 VSCode 的配置对初学者来说又显得颇为复杂。在这样的背景下，如何轻松地搭建一个适合学习和测试 Swift 语言的开发环境？也许本文介绍的 Notepad.exe 能为你提供满意的答案。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/posts/notepad-exe-a-lightweight-swift-code-editor/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>dev tools</category><author>Fatbobman</author></item><item><title>相机类 App Swift 6 重构实战 - SLIT_STUDIO 开发日志</title><link>https://fatbobman.com/zh/posts/swift6-refactoring-in-a-camera-app/</link><guid isPermaLink="true">https://fatbobman.com/zh/posts/swift6-refactoring-in-a-camera-app/</guid><description>尽管 Swift 6 已发布一段时间，不少苹果第一方框架仍未完成适配，导致部分依赖这些框架的开发者在迁移过程中遇到阻碍。Megabits 在开发 SLIT_STUDIO 相机 App 时也面临类似挑战，但他选择迎难而上。本文将介绍他如何通过引入 actor、GlobalActor 以及职责清晰的组件（如 Recorder 和 CaptureManageObject），应对 Swift 6 的线程安全变更，解决 AVFoundation 与 Swift Concurrency 的兼容性问题，同时提升代码结构与安全性，避免依赖 @preconcurrency 和 nonisolated 等临时方案。</description><pubDate>Wed, 28 May 2025 14:00:00 GMT</pubDate><content:encoded>&lt;p&gt;尽管 Swift 6 已发布一段时间，不少苹果第一方框架仍未完成适配，导致部分依赖这些框架的开发者在迁移过程中遇到阻碍。Megabits 在开发 SLIT_STUDIO 相机 App 时也面临类似挑战，但他选择迎难而上。本文将介绍他如何通过引入 actor、GlobalActor 以及职责清晰的组件（如 Recorder 和 CaptureManageObject），应对 Swift 6 的线程安全变更，解决 AVFoundation 与 Swift Concurrency 的兼容性问题，同时提升代码结构与安全性，避免依赖 @preconcurrency 和 nonisolated 等临时方案。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/posts/swift6-refactoring-in-a-camera-app/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><author>Fatbobman</author></item><item><title>感受 Swift 的魅力：一键导出 DataFrame</title><link>https://fatbobman.com/zh/posts/experience-the-charm-of-swift-one-click-export-dataframe/</link><guid isPermaLink="true">https://fatbobman.com/zh/posts/experience-the-charm-of-swift-one-click-export-dataframe/</guid><description>随着对 Swift 理解的不断深入，它的魅力在我眼中愈发耀眼。Swift 让我能以清晰、准确、安全、现代且优雅的方式表达编程思想。本文展示如何使用 Swift 构建一个通用的 DataFrame 导出工具，借助泛型、KeyPath、协议扩展、条件映射与 ResultBuilder，实现类型安全、可配置的数据导出功能，充分体现 Swift 的现代化表达力与灵活性。</description><pubDate>Wed, 21 May 2025 14:00:00 GMT</pubDate><content:encoded>&lt;p&gt;随着对 Swift 理解的不断深入，它的魅力在我眼中愈发耀眼。Swift 让我能以清晰、准确、安全、现代且优雅的方式表达编程思想。本文展示如何使用 Swift 构建一个通用的 DataFrame 导出工具，借助泛型、KeyPath、协议扩展、条件映射与 ResultBuilder，实现类型安全、可配置的数据导出功能，充分体现 Swift 的现代化表达力与灵活性。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/posts/experience-the-charm-of-swift-one-click-export-dataframe/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><author>Fatbobman</author></item><item><title>【小贴士】将访问权限控制在 Swift Package 内</title><link>https://fatbobman.com/zh/snippet/controlling-access-within-a-swift-package/</link><guid isPermaLink="true">https://fatbobman.com/zh/snippet/controlling-access-within-a-swift-package/</guid><description>Swift 5.9 推出 package 访问修饰符，帮助开发者限制 API 在多个 Target 间共享但不对外暴露，提升模块化项目的封装性与安全性</description><pubDate>Thu, 08 May 2025 14:21:01 GMT</pubDate><content:encoded>&lt;p&gt;Swift 5.9 推出 package 访问修饰符，帮助开发者限制 API 在多个 Target 间共享但不对外暴露，提升模块化项目的封装性与安全性&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;/zh/snippet/controlling-access-within-a-swift-package/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><author>Fatbobman</author></item><item><title>【小贴士】解决在 Monorepo 项目中 SwiftLint 配置文件无效</title><link>https://fatbobman.com/zh/snippet/fixing-swiftlint-configuration-not-working-in-monorepo-projects/</link><guid isPermaLink="true">https://fatbobman.com/zh/snippet/fixing-swiftlint-configuration-not-working-in-monorepo-projects/</guid><description>在 Swift Monorepo 中确保 SwiftLint 正常工作，需在 VSCode 设置中明确配置文件路径，并指定需要 lint 的源码目录</description><pubDate>Thu, 24 Apr 2025 14:20:00 GMT</pubDate><content:encoded>&lt;p&gt;在 Swift Monorepo 中确保 SwiftLint 正常工作，需在 VSCode 设置中明确配置文件路径，并指定需要 lint 的源码目录&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;/zh/snippet/fixing-swiftlint-configuration-not-working-in-monorepo-projects/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>dev tools</category><author>Fatbobman</author></item><item><title>【小贴士】如何在 VSCode/Cursor 中测试 Core Data 代码</title><link>https://fatbobman.com/zh/snippet/how-to-test-core-data-code-in-vscode-cursor/</link><guid isPermaLink="true">https://fatbobman.com/zh/snippet/how-to-test-core-data-code-in-vscode-cursor/</guid><description>在 VSCode 或 Cursor 中测试 Core Data 时，需使用 Xcode 工具链并手动将 xcdatamodeld 转换为 momd，以确保单元测试正常运行。</description><pubDate>Tue, 15 Apr 2025 14:21:01 GMT</pubDate><content:encoded>&lt;p&gt;在 VSCode 或 Cursor 中测试 Core Data 时，需使用 Xcode 工具链并手动将 xcdatamodeld 转换为 momd，以确保单元测试正常运行。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;/zh/snippet/how-to-test-core-data-code-in-vscode-cursor/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>core data</category><category>dev tools</category><author>Fatbobman</author></item></channel></rss>