<?xml version="1.0" encoding="UTF-8"?><?xml-stylesheet href="/rss/styles.xsl" type="text/xsl"?><rss version="2.0" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>肘子的 Swift 记事本 ｜ Fatbobman&apos;s Blog</title><description>中文首页｜肘子的 Swift 记事本｜Fatbobman&apos;s Blog，分享与 Swift、SwiftUI、Core Data、Swift Data 有关的内容，也会涉及开发工具、AI 等其他内容。全部文章均为原创，转载需联系本人</description><link>https://fatbobman.com/</link><language>zh</language><follow_challenge><feedId>55086689794490368</feedId><userId>60878761419746304</userId></follow_challenge><item><title>烟花与无人机 - 肘子的 Swift 周报 #69</title><link>https://fatbobman.com/zh/weekly/issue-069/</link><guid isPermaLink="true">https://fatbobman.com/zh/weekly/issue-069/</guid><description>今年我过了一个安静的春节。对于中国人而言，年味总是与烟花的绚丽和空气中淡淡的硫磺味息息相关。然而近些年来，为了环境与安全考虑，越来越多的城市对燃放烟火做出了限制。即便是像我所在的这样往年几乎从不禁放的城市，今年也对核心区域进行了管控。如此一来，城市确实安静了许多，但年味似乎也随之淡去。</description><pubDate>Mon, 03 Feb 2025 14:00:00 GMT</pubDate><content:encoded>&lt;p&gt;今年我过了一个安静的春节。对于中国人而言，年味总是与烟花的绚丽和空气中淡淡的硫磺味息息相关。然而近些年来，为了环境与安全考虑，越来越多的城市对燃放烟火做出了限制。即便是像我所在的这样往年几乎从不禁放的城市，今年也对核心区域进行了管控。如此一来，城市确实安静了许多，但年味似乎也随之淡去。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/weekly/issue-069/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>weekly</category><category>swiftui</category><author>Fatbobman</author></item><item><title>DeepSeek：花小钱办大事 - 肘子的 Swift 周报 #68</title><link>https://fatbobman.com/zh/weekly/issue-068/</link><guid isPermaLink="true">https://fatbobman.com/zh/weekly/issue-068/</guid><description>DeepSeek 推出的新模型无疑是近期科技界最耀眼的明星。他们以极低的训练成本，打造出了性能不逊于当前主流大模型的 AI 系统。从个人使用体验来看，DeepSeek 的 V3 和 R1 在相当多的场景下足以满足我的需求。令人惊讶的是，其训练成本仅为数百万美元，这一数字引发了业内的广泛关注和质疑。</description><pubDate>Mon, 27 Jan 2025 14:00:00 GMT</pubDate><content:encoded>&lt;p&gt;DeepSeek 推出的新模型无疑是近期科技界最耀眼的明星。他们以极低的训练成本，打造出了性能不逊于当前主流大模型的 AI 系统。从个人使用体验来看，DeepSeek 的 V3 和 R1 在相当多的场景下足以满足我的需求。令人惊讶的是，其训练成本仅为数百万美元，这一数字引发了业内的广泛关注和质疑。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/weekly/issue-068/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>weekly</category><category>swiftui</category><author>Fatbobman</author></item><item><title>周报进展与博客调整 - 肘子的 Swift 周报 #67</title><link>https://fatbobman.com/zh/weekly/issue-067/</link><guid isPermaLink="true">https://fatbobman.com/zh/weekly/issue-067/</guid><description>在上期周报发布的当晚，邮件订阅量突破了 3000。结合其他发布渠道，每期周报在发布当周至少覆盖 6000 名以上的读者。虽然这一成绩谈不上多么卓越，但已远远超出了我创办之初的预期。</description><pubDate>Mon, 20 Jan 2025 14:00:00 GMT</pubDate><content:encoded>&lt;p&gt;在上期周报发布的当晚，邮件订阅量突破了 3000。结合其他发布渠道，每期周报在发布当周至少覆盖 6000 名以上的读者。虽然这一成绩谈不上多么卓越，但已远远超出了我创办之初的预期。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/weekly/issue-067/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>weekly</category><category>swiftui</category><author>Fatbobman</author></item><item><title>将 AI 整合至日常工具链 - 肘子的 Swift 周报 #66</title><link>https://fatbobman.com/zh/weekly/issue-066/</link><guid isPermaLink="true">https://fatbobman.com/zh/weekly/issue-066/</guid><description>大语言模型已然成为我日常工作和生活中不可或缺的得力助手。目前，我主要通过对话方式与它互动。虽然随着模型能力的提升，这种交流方式越发流畅自然，但当各类需求混杂在同一会话中时，效率往往难以达到理想状态。为此，我在过去几周开始尝试运用提示词来定制一些面向特定任务的专用会话。</description><pubDate>Mon, 13 Jan 2025 14:00:00 GMT</pubDate><content:encoded>&lt;p&gt;大语言模型已然成为我日常工作和生活中不可或缺的得力助手。目前，我主要通过对话方式与它互动。虽然随着模型能力的提升，这种交流方式越发流畅自然，但当各类需求混杂在同一会话中时，效率往往难以达到理想状态。为此，我在过去几周开始尝试运用提示词来定制一些面向特定任务的专用会话。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/weekly/issue-066/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>weekly</category><category>swiftui</category><author>Fatbobman</author></item><item><title>视角转换：从机场之争看开发者的双重身份 - 肘子的 Swift 周报 #65</title><link>https://fatbobman.com/zh/weekly/issue-065/</link><guid isPermaLink="true">https://fatbobman.com/zh/weekly/issue-065/</guid><description>我所在的城市颇具特色 —— 现有机场位于市区中心，与各核心区域的距离都不超过 10 公里。这样得天独厚的地理位置为市民出行带来了极大便利。然而，正是这个位置制约了机场的发展：近十年来，机场一直在满负荷运转，几乎无法开通新航线；同时，由于四周被密集的居民区包围，跑道的飞行区等级也受到限制。</description><pubDate>Mon, 06 Jan 2025 14:00:00 GMT</pubDate><content:encoded>&lt;p&gt;我所在的城市颇具特色 —— 现有机场位于市区中心，与各核心区域的距离都不超过 10 公里。这样得天独厚的地理位置为市民出行带来了极大便利。然而，正是这个位置制约了机场的发展：近十年来，机场一直在满负荷运转，几乎无法开通新航线；同时，由于四周被密集的居民区包围，跑道的飞行区等级也受到限制。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/weekly/issue-065/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>weekly</category><category>swiftui</category><author>Fatbobman</author></item><item><title>为何 Swift 6 中某些视图修饰器无法使用 @State 属性</title><link>https://fatbobman.com/zh/posts/why-certain-view-modifiers-in-swift-6-cannot-usethe-state-property/</link><guid isPermaLink="true">https://fatbobman.com/zh/posts/why-certain-view-modifiers-in-swift-6-cannot-usethe-state-property/</guid><description>在 Xcode 16 中，为了改善 SwiftUI 在 Swift 6 模式下的表现，苹果对 SwiftUI 框架的 API 进行了多项调整，以满足更严格的并发检查要求。其中最显著的变化是将 View 协议全面标注为 @MainActor。这些优化虽然总体上改善了开发者在 Swift 6 模式下的编程体验，但也在某些特定场景中引发了一些看似反常的编译错误。本文将详细探讨为什么某些视图修饰器中无法直接使用 @State 属性值，并提供相应的解决方案。</description><pubDate>Tue, 24 Dec 2024 00:12:00 GMT</pubDate><content:encoded>&lt;p&gt;在 Xcode 16 中，为了改善 SwiftUI 在 Swift 6 模式下的表现，苹果对 SwiftUI 框架的 API 进行了多项调整，以满足更严格的并发检查要求。其中最显著的变化是将 View 协议全面标注为 @MainActor。这些优化虽然总体上改善了开发者在 Swift 6 模式下的编程体验，但也在某些特定场景中引发了一些看似反常的编译错误。本文将详细探讨为什么某些视图修饰器中无法直接使用 @State 属性值，并提供相应的解决方案。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/posts/why-certain-view-modifiers-in-swift-6-cannot-usethe-state-property/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>swiftui</category><author>Fatbobman</author></item><item><title>SwiftUI onAppear 异常调用的陷阱与应对策略</title><link>https://fatbobman.com/zh/posts/traps-and-countermeasures-for-abnormal-onappear-calls-in-swiftui/</link><guid isPermaLink="true">https://fatbobman.com/zh/posts/traps-and-countermeasures-for-abnormal-onappear-calls-in-swiftui/</guid><description>onAppear 是 SwiftUI 中极其关键的生命周期方法，用于在视图呈现时注入关键逻辑。由于视图实例可能会频繁地被创建和重建，开发者通常会选择在这些方法中准备数据、执行初始化操作。理论上，这些生命周期方法的调用时机应当是可预测和一致的。然而，在某些特定场景下，onAppear 可能会出现非预期的、不必要的调用，这不仅可能导致性能开销，更可能引发应用状态的不可控变化。本文将揭示这一容易被忽视的 SwiftUI 行为陷阱，并提供临时的应对策略。</description><pubDate>Wed, 18 Dec 2024 00:12:00 GMT</pubDate><content:encoded>&lt;p&gt;onAppear 是 SwiftUI 中极其关键的生命周期方法，用于在视图呈现时注入关键逻辑。由于视图实例可能会频繁地被创建和重建，开发者通常会选择在这些方法中准备数据、执行初始化操作。理论上，这些生命周期方法的调用时机应当是可预测和一致的。然而，在某些特定场景下，onAppear 可能会出现非预期的、不必要的调用，这不仅可能导致性能开销，更可能引发应用状态的不可控变化。本文将揭示这一容易被忽视的 SwiftUI 行为陷阱，并提供临时的应对策略。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/posts/traps-and-countermeasures-for-abnormal-onappear-calls-in-swiftui/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>swiftui</category><author>Fatbobman</author></item><item><title>Core Data 的模型继承</title><link>https://fatbobman.com/zh/posts/model-inheritance-in-core-data/</link><guid isPermaLink="true">https://fatbobman.com/zh/posts/model-inheritance-in-core-data/</guid><description>Core Data 的一个卓越特点是让开发者能够以更加接近面向对象编程的方式声明数据模型，同时无需关心底层的存储实现细节。在这个框架中，模型继承是一个尤为重要的机制。本文将深入探讨模型继承的核心概念，包括父实体（Parent Entity）、子实体（Sub Entity）和抽象实体（Abstract Entity）；我们将分析它们的优缺点，并探讨在不直接使用这些功能时如何实现类似的效果。</description><pubDate>Wed, 11 Dec 2024 14:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Core Data 的一个卓越特点是让开发者能够以更加接近面向对象编程的方式声明数据模型，同时无需关心底层的存储实现细节。在这个框架中，模型继承是一个尤为重要的机制。本文将深入探讨模型继承的核心概念，包括父实体（Parent Entity）、子实体（Sub Entity）和抽象实体（Abstract Entity）；我们将分析它们的优缺点，并探讨在不直接使用这些功能时如何实现类似的效果。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/posts/model-inheritance-in-core-data/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>swiftdata</category><category>core data</category><author>Fatbobman</author></item><item><title>Typefully：轻松告别繁琐的社交媒体发布</title><link>https://fatbobman.com/zh/posts/typefully-say-goodbye-to-the-hassles-of-social-media-posting/</link><guid isPermaLink="true">https://fatbobman.com/zh/posts/typefully-say-goodbye-to-the-hassles-of-social-media-posting/</guid><description>随着社交媒体渠道的日益丰富，一个网络用户不知不觉间已拥有多个不同的社交账号。对于内容创作者和企业账号管理者而言，在各个社交平台上发布内容所需的准备工作正变得愈发繁琐。在过去的一个月里，我开始尝试使用 Typefully 来统一管理和发布多个社交平台的内容，本文中我将分享我的使用心得。</description><pubDate>Wed, 04 Dec 2024 00:12:00 GMT</pubDate><content:encoded>&lt;p&gt;随着社交媒体渠道的日益丰富，一个网络用户不知不觉间已拥有多个不同的社交账号。对于内容创作者和企业账号管理者而言，在各个社交平台上发布内容所需的准备工作正变得愈发繁琐。在过去的一个月里，我开始尝试使用 Typefully 来统一管理和发布多个社交平台的内容，本文中我将分享我的使用心得。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/posts/typefully-say-goodbye-to-the-hassles-of-social-media-posting/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>tools</category><category>life</category><author>Fatbobman</author></item><item><title>有意为之还是技术缺陷？SwiftUI 多层导航中的 onChange 异常</title><link>https://fatbobman.com/zh/posts/the-anomaly-of-onchange-in-swiftui-multi-layer-navigation/</link><guid isPermaLink="true">https://fatbobman.com/zh/posts/the-anomaly-of-onchange-in-swiftui-multi-layer-navigation/</guid><description>SwiftUI 提供的 onChange 修饰器，使开发者能够在视图中监听特定值的变化，并在值发生改变时执行相应的操作。直觉上，只要某个视图位于当前可见的视图树分支中（ 活动中 ），在观察的值发生变化时，对应的闭包就应该被触发。但在某些特定的导航场景下，onChange 修饰器似乎会“选择性失聪”，明明观察的值发生了变化，却诡异地保持沉默。这究竟是苹果精心设计的特性，还是一个隐藏已久的代码缺陷？本文将揭示这一现象并对开发者给予必要的提醒。</description><pubDate>Wed, 27 Nov 2024 00:12:00 GMT</pubDate><content:encoded>&lt;p&gt;SwiftUI 提供的 onChange 修饰器，使开发者能够在视图中监听特定值的变化，并在值发生改变时执行相应的操作。直觉上，只要某个视图位于当前可见的视图树分支中（ 活动中 ），在观察的值发生变化时，对应的闭包就应该被触发。但在某些特定的导航场景下，onChange 修饰器似乎会“选择性失聪”，明明观察的值发生了变化，却诡异地保持沉默。这究竟是苹果精心设计的特性，还是一个隐藏已久的代码缺陷？本文将揭示这一现象并对开发者给予必要的提醒。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/posts/the-anomaly-of-onchange-in-swiftui-multi-layer-navigation/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>swiftui</category><author>Fatbobman</author></item><item><title>在 SwiftData 和 Core Data 中用 Transaction 代替 Save</title><link>https://fatbobman.com/zh/posts/using-transactions-instead-of-save-in-swiftdata-and-core-data/</link><guid isPermaLink="true">https://fatbobman.com/zh/posts/using-transactions-instead-of-save-in-swiftdata-and-core-data/</guid><description>在数据持久化操作中，确保数据的一致性和完整性至关重要。SwiftData 框架通过在 ModelContext 中引入 transaction 方法，为开发者提供了一种更优雅的方式来组织和管理数据操作。本文将探讨如何运用事务（Transaction）的概念来构建更可靠、高效的持久化操作。</description><pubDate>Wed, 20 Nov 2024 14:00:00 GMT</pubDate><content:encoded>&lt;p&gt;在数据持久化操作中，确保数据的一致性和完整性至关重要。SwiftData 框架通过在 ModelContext 中引入 transaction 方法，为开发者提供了一种更优雅的方式来组织和管理数据操作。本文将探讨如何运用事务（Transaction）的概念来构建更可靠、高效的持久化操作。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/posts/using-transactions-instead-of-save-in-swiftdata-and-core-data/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>swiftdata</category><category>core data</category><author>Fatbobman</author></item><item><title>理解 SwiftUI 的视图刷新机制：从 TimelineView 刷新问题谈起</title><link>https://fatbobman.com/zh/posts/understanding-swiftui-view-update-mechanism/</link><guid isPermaLink="true">https://fatbobman.com/zh/posts/understanding-swiftui-view-update-mechanism/</guid><description>SwiftUI 中，视图的自动刷新机制让我们能够轻松构建响应式的用户界面。但有时，视图可能并不会按照我们的预期进行更新。本文将通过一个看似简单但颇具代表性的 TimelineView 刷新问题，探讨 SwiftUI 的视图刷新机制。</description><pubDate>Wed, 13 Nov 2024 00:12:00 GMT</pubDate><content:encoded>&lt;p&gt;SwiftUI 中，视图的自动刷新机制让我们能够轻松构建响应式的用户界面。但有时，视图可能并不会按照我们的预期进行更新。本文将通过一个看似简单但颇具代表性的 TimelineView 刷新问题，探讨 SwiftUI 的视图刷新机制。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/posts/understanding-swiftui-view-update-mechanism/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>swiftui</category><author>Fatbobman</author></item><item><title>掌握 Core Data 和 SwiftData 中的数据追踪与通知</title><link>https://fatbobman.com/zh/posts/mastering-data-tracking-and-notifications-in-core-data-and-swiftdata/</link><guid isPermaLink="true">https://fatbobman.com/zh/posts/mastering-data-tracking-and-notifications-in-core-data-and-swiftdata/</guid><description>Core Data 和 SwiftData 作为 Apple 生态系统中强大的持久化框架，不仅提供了 @FetchRequest 和 @Query 这样的声明式数据监听工具，更内置了一套完整的数据追踪与通知机制。了解和掌握这些机制对于构建健壮的数据驱动型应用至关重要。本文将带你探索从简单的自定义通知，到强大的持久化历史追踪（Persistent History Tracking 和 SwiftData History）等多层次的解决方案，助你应对各种复杂的数据同步场景。</description><pubDate>Wed, 06 Nov 2024 14:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Core Data 和 SwiftData 作为 Apple 生态系统中强大的持久化框架，不仅提供了 @FetchRequest 和 @Query 这样的声明式数据监听工具，更内置了一套完整的数据追踪与通知机制。了解和掌握这些机制对于构建健壮的数据驱动型应用至关重要。本文将带你探索从简单的自定义通知，到强大的持久化历史追踪（Persistent History Tracking 和 SwiftData History）等多层次的解决方案，助你应对各种复杂的数据同步场景。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/posts/mastering-data-tracking-and-notifications-in-core-data-and-swiftdata/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>swiftdata</category><category>core data</category><author>Fatbobman</author></item><item><title>从项目重构说起：五个 Swift 模块分享</title><link>https://fatbobman.com/zh/posts/starting-with-project-refactoring-sharing-five-swift-modules/</link><guid isPermaLink="true">https://fatbobman.com/zh/posts/starting-with-project-refactoring-sharing-five-swift-modules/</guid><description>最近，我着手重构这个已有四年未进行大更新的应用。重构过程中，我将部分功能模块提取出来并开源分享。本文将简要介绍过去两个月中我开源的几个库。</description><pubDate>Wed, 30 Oct 2024 14:00:00 GMT</pubDate><content:encoded>&lt;p&gt;最近，我着手重构这个已有四年未进行大更新的应用。重构过程中，我将部分功能模块提取出来并开源分享。本文将简要介绍过去两个月中我开源的几个库。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/posts/starting-with-project-refactoring-sharing-five-swift-modules/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><category>frameworks</category><category>core data</category><category>swiftdata</category><author>Fatbobman</author></item><item><title>从基础到进阶：Swift 中的 KeyPath 完全指南</title><link>https://fatbobman.com/zh/posts/comprehensive-guide-to-mastering-keypath-in-swift/</link><guid isPermaLink="true">https://fatbobman.com/zh/posts/comprehensive-guide-to-mastering-keypath-in-swift/</guid><description>在 Swift 的世界里，KeyPath 是一个强大而又常被低估的特性。许多开发者在日常编程中不经意间使用它，却未能充分认识到它的潜力和重要性。本文旨在深入剖析 KeyPath 的功能特性，揭示其在 Swift 编程中的独特魅力，帮助你将它转化为开发过程中的得力助手。</description><pubDate>Wed, 23 Oct 2024 14:00:00 GMT</pubDate><content:encoded>&lt;p&gt;在 Swift 的世界里，KeyPath 是一个强大而又常被低估的特性。许多开发者在日常编程中不经意间使用它，却未能充分认识到它的潜力和重要性。本文旨在深入剖析 KeyPath 的功能特性，揭示其在 Swift 编程中的独特魅力，帮助你将它转化为开发过程中的得力助手。&lt;/p&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&gt;&lt;a href=&quot;https://fatbobman.com/rss.xml&quot;&gt;&lt;b&gt;Subscribe English RSS&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   &lt;div style=&quot;margin-top: 20px;&quot;&gt;
                   &lt;p&quot;&gt;&lt;a href=&quot;https://fatbobman.com/zh/posts/comprehensive-guide-to-mastering-keypath-in-swift/&quot;&gt;&lt;b&gt;阅读全文&lt;/b&gt;&lt;/a&gt;&lt;/p&gt;
                   &lt;/div&gt;
                   </content:encoded><category>computing</category><category>swift</category><category>learning</category><category>programming</category><category>swift-programming</category><category>ios-development</category><author>Fatbobman</author></item></channel></rss>